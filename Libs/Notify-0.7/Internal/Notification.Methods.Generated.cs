
using System;
using GObject;
using System.Runtime.InteropServices;
using System.Runtime.Versioning;

#nullable enable

namespace Notify07.Internal;

// AUTOGENERATED FILE - DO NOT MODIFY


public partial class Notification
{
    
/// <summary>
///Calls native function notify_notification_get_type.
/// </summary>

/// <returns>Transfer ownership: None Nullable: False</returns>


[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_get_type")]
public static extern nuint GetGType();
    
    
/// <summary>
///Calls native method notify_notification_add_action.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="action">Transfer ownership: None Nullable: False</param>
/// <param name="label">Transfer ownership: None Nullable: False</param>
/// <param name="callback">Transfer ownership: None Nullable: False</param>
/// <param name="userData">Transfer ownership: None Nullable: True</param>
/// <param name="freeFunc">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_add_action")]
public static extern void AddAction(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle action, GLib.Internal.NonNullableUtf8StringHandle label, Notify07.Internal.ActionCallback callback, IntPtr userData, GLib.Internal.FreeFunc freeFunc);

/// <summary>
///Calls native method notify_notification_clear_actions.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_clear_actions")]
public static extern void ClearActions(IntPtr notification);

/// <summary>
///Calls native method notify_notification_clear_hints.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_clear_hints")]
public static extern void ClearHints(IntPtr notification);

/// <summary>
///Calls native method notify_notification_close.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_close")]
public static extern bool Close(IntPtr notification, out GLib.Internal.ErrorOwnedHandle error);

/// <summary>
///Calls native method notify_notification_get_activation_token.
///Version: 0.7.10
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: True</returns>
[Version("0.7.10")]
[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_get_activation_token")]
public static extern GLib.Internal.NullableUtf8StringUnownedHandle GetActivationToken(IntPtr notification);

/// <summary>
///Calls native method notify_notification_get_closed_reason.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_get_closed_reason")]
public static extern int GetClosedReason(IntPtr notification);

/// <summary>
///Calls native method notify_notification_set_app_icon.
///Version: 0.8.4
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="appIcon">Transfer ownership: None Nullable: True</param>
/// <returns>Transfer ownership: None Nullable: False</returns>
[Version("0.8.4")]
[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_app_icon")]
public static extern void SetAppIcon(IntPtr notification, GLib.Internal.NullableUtf8StringHandle appIcon);

/// <summary>
///Calls native method notify_notification_set_app_name.
///Version: 0.7.3
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="appName">Transfer ownership: None Nullable: True</param>
/// <returns>Transfer ownership: None Nullable: False</returns>
[Version("0.7.3")]
[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_app_name")]
public static extern void SetAppName(IntPtr notification, GLib.Internal.NullableUtf8StringHandle appName);

/// <summary>
///Calls native method notify_notification_set_category.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="category">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_category")]
public static extern void SetCategory(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle category);

/// <summary>
///Calls native method notify_notification_set_hint.
///Version: 0.6
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: True</param>
/// <returns>Transfer ownership: None Nullable: False</returns>
[Version("0.6")]
[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint")]
public static extern void SetHint(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, GLib.Internal.VariantHandle value);

/// <summary>
///Calls native method notify_notification_set_hint_byte.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_byte")]
public static extern void SetHintByte(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, byte value);

/// <summary>
///Calls native method notify_notification_set_hint_byte_array.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <param name="len">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_byte_array")]
public static extern void SetHintByteArray(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, ref byte value, nuint len);

/// <summary>
///Calls native method notify_notification_set_hint_double.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_double")]
public static extern void SetHintDouble(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, double value);

/// <summary>
///Calls native method notify_notification_set_hint_int32.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_int32")]
public static extern void SetHintInt32(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, int value);

/// <summary>
///Calls native method notify_notification_set_hint_string.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_string")]
public static extern void SetHintString(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, GLib.Internal.NonNullableUtf8StringHandle value);

/// <summary>
///Calls native method notify_notification_set_hint_uint32.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="key">Transfer ownership: None Nullable: False</param>
/// <param name="value">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_hint_uint32")]
public static extern void SetHintUint32(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle key, uint value);

/// <summary>
///Calls native method notify_notification_set_icon_from_pixbuf.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="icon">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_icon_from_pixbuf")]
public static extern void SetIconFromPixbuf(IntPtr notification, IntPtr icon);

/// <summary>
///Calls native method notify_notification_set_image_from_pixbuf.
///Version: 0.5
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="pixbuf">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>
[Version("0.5")]
[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_image_from_pixbuf")]
public static extern void SetImageFromPixbuf(IntPtr notification, IntPtr pixbuf);

/// <summary>
///Calls native method notify_notification_set_timeout.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="timeout">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_timeout")]
public static extern void SetTimeout(IntPtr notification, int timeout);

/// <summary>
///Calls native method notify_notification_set_urgency.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="urgency">Transfer ownership: None Nullable: False</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_set_urgency")]
public static extern void SetUrgency(IntPtr notification, Notify07.Urgency urgency);

/// <summary>
///Calls native method notify_notification_show.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>

/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_show")]
public static extern bool Show(IntPtr notification, out GLib.Internal.ErrorOwnedHandle error);

/// <summary>
///Calls native method notify_notification_update.
/// </summary>
/// <param name="notification">Transfer ownership: None Nullable: False</param>
/// <param name="summary">Transfer ownership: None Nullable: False</param>
/// <param name="body">Transfer ownership: None Nullable: True</param>
/// <param name="icon">Transfer ownership: None Nullable: True</param>
/// <returns>Transfer ownership: None Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_update")]
public static extern bool Update(IntPtr notification, GLib.Internal.NonNullableUtf8StringHandle summary, GLib.Internal.NullableUtf8StringHandle body, GLib.Internal.NullableUtf8StringHandle icon);
    
/// <summary>
///Calls native constructor notify_notification_new.
/// </summary>
/// <param name="summary">Transfer ownership: None Nullable: False</param>
/// <param name="body">Transfer ownership: None Nullable: True</param>
/// <param name="icon">Transfer ownership: None Nullable: True</param>
/// <returns>Transfer ownership: Full Nullable: False</returns>

[DllImport(ImportResolver.Library, EntryPoint = "notify_notification_new")]
public static extern IntPtr New(GLib.Internal.NonNullableUtf8StringHandle summary, GLib.Internal.NullableUtf8StringHandle body, GLib.Internal.NullableUtf8StringHandle icon);
}