
using System;
using GObject;
using System.Runtime.InteropServices;
#nullable enable
namespace Notify07
{
    // AUTOGENERATED FILE - DO NOT MODIFY

    public partial class Notification
    {
        public static readonly Property<string?, Notification> AppIconPropertyDefinition = new (
    unmanagedName: "app-icon",
    managedName: nameof(AppIcon)
);

public string? AppIcon
{
    get => AppIconPropertyDefinition.Get(this);
    set => AppIconPropertyDefinition.Set(this, value);
}


public static readonly Property<string?, Notification> AppNamePropertyDefinition = new (
    unmanagedName: "app-name",
    managedName: nameof(AppName)
);

public string? AppName
{
    get => AppNamePropertyDefinition.Get(this);
    set => AppNamePropertyDefinition.Set(this, value);
}


public static readonly Property<string?, Notification> BodyPropertyDefinition = new (
    unmanagedName: "body",
    managedName: nameof(Body)
);

public string? Body
{
    get => BodyPropertyDefinition.Get(this);
    set => BodyPropertyDefinition.Set(this, value);
}


public static readonly Property<int, Notification> ClosedReasonPropertyDefinition = new (
    unmanagedName: "closed-reason",
    managedName: nameof(ClosedReason)
);

public int ClosedReason
{
    get => Notify07.Internal.Notification.GetClosedReason(base.Handle.DangerousGetHandle());
}


public static readonly Property<string?, Notification> IconNamePropertyDefinition = new (
    unmanagedName: "icon-name",
    managedName: nameof(IconName)
);

public string? IconName
{
    get => IconNamePropertyDefinition.Get(this);
    set => IconNamePropertyDefinition.Set(this, value);
}


public static readonly Property<int, Notification> IdPropertyDefinition = new (
    unmanagedName: "id",
    managedName: nameof(Id)
);

public int Id
{
    get => IdPropertyDefinition.Get(this);
    set => IdPropertyDefinition.Set(this, value);
}


public static readonly Property<string?, Notification> SummaryPropertyDefinition = new (
    unmanagedName: "summary",
    managedName: nameof(Summary)
);

public string? Summary
{
    get => SummaryPropertyDefinition.Get(this);
    set => SummaryPropertyDefinition.Set(this, value);
}


    }
}