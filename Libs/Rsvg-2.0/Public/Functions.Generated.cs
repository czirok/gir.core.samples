
using System;
using System.Linq;
using System.Runtime.InteropServices;

#nullable enable

namespace Rsvg;

// AUTOGENERATED FILE - DO NOT MODIFY

public static partial class Functions
{
    
[Version("2.36")]
public static void Cleanup()
{
    
    Rsvg.Internal.Functions.Cleanup();

    
    
    
}


public static GLib.Quark ErrorQuark()
{
    
    var resultErrorQuark = Rsvg.Internal.Functions.ErrorQuark();

    
    
    return resultErrorQuark;
}

[Version("2.9")]
public static void Init()
{
    
    Rsvg.Internal.Functions.Init();

    
    
    
}


public static GdkPixbuf.Pixbuf? PixbufFromFile(string filename)
{
    using var filenameNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(filename);
    var resultPixbufFromFile = Rsvg.Internal.Functions.PixbufFromFile(filenameNative, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultPixbufFromFile, true);
}


public static GdkPixbuf.Pixbuf? PixbufFromFileAtMaxSize(string filename, int maxWidth, int maxHeight)
{
    using var filenameNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(filename);
    var resultPixbufFromFileAtMaxSize = Rsvg.Internal.Functions.PixbufFromFileAtMaxSize(filenameNative, maxWidth, maxHeight, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultPixbufFromFileAtMaxSize, true);
}


public static GdkPixbuf.Pixbuf? PixbufFromFileAtSize(string filename, int width, int height)
{
    using var filenameNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(filename);
    var resultPixbufFromFileAtSize = Rsvg.Internal.Functions.PixbufFromFileAtSize(filenameNative, width, height, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultPixbufFromFileAtSize, true);
}


public static GdkPixbuf.Pixbuf? PixbufFromFileAtZoom(string filename, double xZoom, double yZoom)
{
    using var filenameNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(filename);
    var resultPixbufFromFileAtZoom = Rsvg.Internal.Functions.PixbufFromFileAtZoom(filenameNative, xZoom, yZoom, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultPixbufFromFileAtZoom, true);
}


public static GdkPixbuf.Pixbuf? PixbufFromFileAtZoomWithMax(string filename, double xZoom, double yZoom, int maxWidth, int maxHeight)
{
    using var filenameNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(filename);
    var resultPixbufFromFileAtZoomWithMax = Rsvg.Internal.Functions.PixbufFromFileAtZoomWithMax(filenameNative, xZoom, yZoom, maxWidth, maxHeight, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultPixbufFromFileAtZoomWithMax, true);
}

[Version("2.8")]
public static void SetDefaultDpi(double dpi)
{
    
    Rsvg.Internal.Functions.SetDefaultDpi(dpi);

    
    
    
}

[Version("2.8")]
public static void SetDefaultDpiXY(double dpiX, double dpiY)
{
    
    Rsvg.Internal.Functions.SetDefaultDpiXY(dpiX, dpiY);

    
    
    
}

[Version("2.9")]
public static void Term()
{
    
    Rsvg.Internal.Functions.Term();

    
    
    
}
}