
using System;
using System.Linq;
using GObject;
using System.Runtime.InteropServices;

#nullable enable

namespace Rsvg;

// AUTOGENERATED FILE - DO NOT MODIFY

public partial class Handle
{
    

public bool Close()
{
    
    var resultClose = Rsvg.Internal.Handle.Close(base.Handle.DangerousGetHandle(), out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultClose;
}

[Version("2.8")]
public string GetBaseUri()
{
    
    var resultGetBaseUri = Rsvg.Internal.Handle.GetBaseUri(base.Handle.DangerousGetHandle());

    
    
    return resultGetBaseUri.ConvertToString();
}

[Version("2.4")]
public string? GetDesc()
{
    
    var resultGetDesc = Rsvg.Internal.Handle.GetDesc(base.Handle.DangerousGetHandle());

    
    
    return resultGetDesc.ConvertToString();
}

[Version("2.14")]
public void GetDimensions(out Rsvg.DimensionData dimensionData)
{
    var dimensionDataNative = Rsvg.Internal.DimensionDataOwnedHandle.Create();
dimensionData = new Rsvg.DimensionData(dimensionDataNative);
    Rsvg.Internal.Handle.GetDimensions(base.Handle.DangerousGetHandle(), dimensionDataNative);

    
    
    
}

[Version("2.22")]
public bool GetDimensionsSub(out Rsvg.DimensionData dimensionData, string? id)
{
    var dimensionDataNative = Rsvg.Internal.DimensionDataOwnedHandle.Create();
dimensionData = new Rsvg.DimensionData(dimensionDataNative);
using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultGetDimensionsSub = Rsvg.Internal.Handle.GetDimensionsSub(base.Handle.DangerousGetHandle(), dimensionDataNative, idNative);

    
    
    return resultGetDimensionsSub;
}

[Version("2.46")]
public bool GetGeometryForElement(string? id, out Rsvg.Rectangle outInkRect, out Rsvg.Rectangle outLogicalRect)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
var outInkRectNative = Rsvg.Internal.RectangleOwnedHandle.Create();
outInkRect = new Rsvg.Rectangle(outInkRectNative);
var outLogicalRectNative = Rsvg.Internal.RectangleOwnedHandle.Create();
outLogicalRect = new Rsvg.Rectangle(outLogicalRectNative);
    var resultGetGeometryForElement = Rsvg.Internal.Handle.GetGeometryForElement(base.Handle.DangerousGetHandle(), idNative, outInkRectNative, outLogicalRectNative, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultGetGeometryForElement;
}

[Version("2.46")]
public bool GetGeometryForLayer(string? id, Rsvg.Rectangle viewport, out Rsvg.Rectangle outInkRect, out Rsvg.Rectangle outLogicalRect)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
var outInkRectNative = Rsvg.Internal.RectangleOwnedHandle.Create();
outInkRect = new Rsvg.Rectangle(outInkRectNative);
var outLogicalRectNative = Rsvg.Internal.RectangleOwnedHandle.Create();
outLogicalRect = new Rsvg.Rectangle(outLogicalRectNative);
    var resultGetGeometryForLayer = Rsvg.Internal.Handle.GetGeometryForLayer(base.Handle.DangerousGetHandle(), idNative, viewport.Handle, outInkRectNative, outLogicalRectNative, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultGetGeometryForLayer;
}

[Version("2.46")]
public void GetIntrinsicDimensions(out bool outHasWidth, out Rsvg.Length outWidth, out bool outHasHeight, out Rsvg.Length outHeight, out bool outHasViewbox, out Rsvg.Rectangle outViewbox)
{
    var outWidthNative = Rsvg.Internal.LengthOwnedHandle.Create();
outWidth = new Rsvg.Length(outWidthNative);
var outHeightNative = Rsvg.Internal.LengthOwnedHandle.Create();
outHeight = new Rsvg.Length(outHeightNative);
var outViewboxNative = Rsvg.Internal.RectangleOwnedHandle.Create();
outViewbox = new Rsvg.Rectangle(outViewboxNative);
    Rsvg.Internal.Handle.GetIntrinsicDimensions(base.Handle.DangerousGetHandle(), out outHasWidth, outWidthNative, out outHasHeight, outHeightNative, out outHasViewbox, outViewboxNative);

    
    
    
}

[Version("2.52")]
public bool GetIntrinsicSizeInPixels(out double outWidth, out double outHeight)
{
    
    var resultGetIntrinsicSizeInPixels = Rsvg.Internal.Handle.GetIntrinsicSizeInPixels(base.Handle.DangerousGetHandle(), out outWidth, out outHeight);

    
    
    return resultGetIntrinsicSizeInPixels;
}

[Version("2.9")]
public string? GetMetadata()
{
    
    var resultGetMetadata = Rsvg.Internal.Handle.GetMetadata(base.Handle.DangerousGetHandle());

    
    
    return resultGetMetadata.ConvertToString();
}


public GdkPixbuf.Pixbuf? GetPixbuf()
{
    
    var resultGetPixbuf = Rsvg.Internal.Handle.GetPixbuf(base.Handle.DangerousGetHandle());

    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultGetPixbuf, true);
}

[Version("2.59")]
public GdkPixbuf.Pixbuf? GetPixbufAndError()
{
    
    var resultGetPixbufAndError = Rsvg.Internal.Handle.GetPixbufAndError(base.Handle.DangerousGetHandle(), out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultGetPixbufAndError, true);
}

[Version("2.14")]
public GdkPixbuf.Pixbuf? GetPixbufSub(string? id)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultGetPixbufSub = Rsvg.Internal.Handle.GetPixbufSub(base.Handle.DangerousGetHandle(), idNative);

    
    
    return (GdkPixbuf.Pixbuf?) GObject.Internal.InstanceWrapper.WrapNullableHandle<GdkPixbuf.Pixbuf>(resultGetPixbufSub, true);
}

[Version("2.22")]
public bool GetPositionSub(out Rsvg.PositionData positionData, string? id)
{
    var positionDataNative = Rsvg.Internal.PositionDataOwnedHandle.Create();
positionData = new Rsvg.PositionData(positionDataNative);
using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultGetPositionSub = Rsvg.Internal.Handle.GetPositionSub(base.Handle.DangerousGetHandle(), positionDataNative, idNative);

    
    
    return resultGetPositionSub;
}

[Version("2.4")]
public string? GetTitle()
{
    
    var resultGetTitle = Rsvg.Internal.Handle.GetTitle(base.Handle.DangerousGetHandle());

    
    
    return resultGetTitle.ConvertToString();
}

[Version("2.22")]
public bool HasSub(string id)
{
    using var idNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(id);
    var resultHasSub = Rsvg.Internal.Handle.HasSub(base.Handle.DangerousGetHandle(), idNative);

    
    
    return resultHasSub;
}


public void InternalSetTesting(bool testing)
{
    
    Rsvg.Internal.Handle.InternalSetTesting(base.Handle.DangerousGetHandle(), testing);

    
    
    
}

[Version("2.32")]
public bool ReadStreamSync(Gio.InputStream stream, Gio.Cancellable? cancellable)
{
    
    var resultReadStreamSync = Rsvg.Internal.Handle.ReadStreamSync(base.Handle.DangerousGetHandle(), stream.Handle.DangerousGetHandle(), cancellable?.Handle.DangerousGetHandle() ?? IntPtr.Zero, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultReadStreamSync;
}

[Version("2.14")]
public bool RenderCairo(Cairo.Context cr)
{
    
    var resultRenderCairo = Rsvg.Internal.Handle.RenderCairo(base.Handle.DangerousGetHandle(), cr.Handle);

    
    
    return resultRenderCairo;
}

[Version("2.14")]
public bool RenderCairoSub(Cairo.Context cr, string? id)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultRenderCairoSub = Rsvg.Internal.Handle.RenderCairoSub(base.Handle.DangerousGetHandle(), cr.Handle, idNative);

    
    
    return resultRenderCairoSub;
}

[Version("2.46")]
public bool RenderDocument(Cairo.Context cr, Rsvg.Rectangle viewport)
{
    
    var resultRenderDocument = Rsvg.Internal.Handle.RenderDocument(base.Handle.DangerousGetHandle(), cr.Handle, viewport.Handle, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultRenderDocument;
}

[Version("2.46")]
public bool RenderElement(Cairo.Context cr, string? id, Rsvg.Rectangle elementViewport)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultRenderElement = Rsvg.Internal.Handle.RenderElement(base.Handle.DangerousGetHandle(), cr.Handle, idNative, elementViewport.Handle, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultRenderElement;
}

[Version("2.46")]
public bool RenderLayer(Cairo.Context cr, string? id, Rsvg.Rectangle viewport)
{
    using var idNative = GLib.Internal.NullableUtf8StringOwnedHandle.Create(id);
    var resultRenderLayer = Rsvg.Internal.Handle.RenderLayer(base.Handle.DangerousGetHandle(), cr.Handle, idNative, viewport.Handle, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultRenderLayer;
}

[Version("2.32")]
public void SetBaseGfile(Gio.File baseFile)
{
    
    Rsvg.Internal.Handle.SetBaseGfile(base.Handle.DangerousGetHandle(), ((GObject.Object)baseFile).Handle.DangerousGetHandle());

    
    
    
}

[Version("2.9")]
public void SetBaseUri(string baseUri)
{
    using var baseUriNative = GLib.Internal.NonNullableUtf8StringOwnedHandle.Create(baseUri);
    Rsvg.Internal.Handle.SetBaseUri(base.Handle.DangerousGetHandle(), baseUriNative);

    
    
    
}

[Version("2.59.0")]
public void SetCancellableForRendering(Gio.Cancellable? cancellable)
{
    
    Rsvg.Internal.Handle.SetCancellableForRendering(base.Handle.DangerousGetHandle(), cancellable?.Handle.DangerousGetHandle() ?? IntPtr.Zero);

    
    
    
}

[Version("2.8")]
public void SetDpi(double dpi)
{
    
    Rsvg.Internal.Handle.SetDpi(base.Handle.DangerousGetHandle(), dpi);

    
    
    
}

[Version("2.8")]
public void SetDpiXY(double dpiX, double dpiY)
{
    
    Rsvg.Internal.Handle.SetDpiXY(base.Handle.DangerousGetHandle(), dpiX, dpiY);

    
    
    
}


public void SetSizeCallback(Rsvg.SizeFunc? sizeFunc)
{
    var sizeFuncHandler = new Rsvg.Internal.SizeFuncNotifiedHandler(sizeFunc);
    Rsvg.Internal.Handle.SetSizeCallback(base.Handle.DangerousGetHandle(), sizeFuncHandler.NativeCallback, IntPtr.Zero, sizeFuncHandler.DestroyNotify);

    
    
    
}

[Version("2.48")]
public bool SetStylesheet(Span<byte> css)
{
    
    var resultSetStylesheet = Rsvg.Internal.Handle.SetStylesheet(base.Handle.DangerousGetHandle(), ref MemoryMarshal.GetReference(css), (nuint) css.Length, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultSetStylesheet;
}


public bool Write(Span<byte> buf)
{
    
    var resultWrite = Rsvg.Internal.Handle.Write(base.Handle.DangerousGetHandle(), ref MemoryMarshal.GetReference(buf), (nuint) buf.Length, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultWrite;
}
}