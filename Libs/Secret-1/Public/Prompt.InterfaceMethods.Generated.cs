
using System;
using System.Linq;
using GObject;
using System.Runtime.InteropServices;

#nullable enable

namespace Secret;

// AUTOGENERATED FILE - DO NOT MODIFY

public partial class Prompt
{
    

[Version("2.22")]
public bool InitFinish(Gio.AsyncResult res)
{
    
    var resultInitFinish = Gio.Internal.AsyncInitable.InitFinish(this.Handle.DangerousGetHandle(), ((GObject.Object)res).Handle.DangerousGetHandle(), out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultInitFinish;
}

[Version("2.22")]
GObject.Object Gio.AsyncInitable.NewFinish(Gio.AsyncResult res)
{
    
    var resultNewFinish = Gio.Internal.AsyncInitable.NewFinish(this.Handle.DangerousGetHandle(), ((GObject.Object)res).Handle.DangerousGetHandle(), out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return (GObject.Object) GObject.Internal.InstanceWrapper.WrapHandle<GObject.Object>(resultNewFinish, true);
}

[Version("2.32")]
public Gio.DBusObject? DupObject()
{
    
    var resultDupObject = Gio.Internal.DBusInterface.DupObject(this.Handle.DangerousGetHandle());

    
    
    return (Gio.DBusObject?) GObject.Internal.InstanceWrapper.WrapNullableHandle<Gio.DBusObjectHelper>(resultDupObject, true);
}

[Version("2.30")]
Gio.DBusInterfaceInfo Gio.DBusInterface.GetInfo()
{
    
    var resultGetInfo = Gio.Internal.DBusInterface.GetInfo(this.Handle.DangerousGetHandle());

    
    
    return new Gio.DBusInterfaceInfo(resultGetInfo.OwnedCopy());
}

[Version("2.30")]
public Gio.DBusObject? GetObject()
{
    
    var resultGetObject = Gio.Internal.DBusInterface.GetObject(this.Handle.DangerousGetHandle());

    
    
    return (Gio.DBusObject?) GObject.Internal.InstanceWrapper.WrapNullableHandle<Gio.DBusObjectHelper>(resultGetObject, false);
}

[Version("2.30")]
public void SetObject(Gio.DBusObject? @object)
{
    
    Gio.Internal.DBusInterface.SetObject(this.Handle.DangerousGetHandle(), ((GObject.Object?)@object)?.Handle.DangerousGetHandle() ?? IntPtr.Zero);

    
    
    
}

[Version("2.22")]
public bool Init(Gio.Cancellable? cancellable)
{
    
    var resultInit = Gio.Internal.Initable.Init(this.Handle.DangerousGetHandle(), cancellable?.Handle.DangerousGetHandle() ?? IntPtr.Zero, out GLib.Internal.ErrorOwnedHandle error);
if(!error.IsInvalid)
    throw new GLib.GException(error);
    
    
    return resultInit;
}
}